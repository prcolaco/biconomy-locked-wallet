/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BasicMetaTransaction } from "../BasicMetaTransaction";

export class BasicMetaTransaction__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicMetaTransaction> {
    return super.deploy(overrides || {}) as Promise<BasicMetaTransaction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicMetaTransaction {
    return super.attach(address) as BasicMetaTransaction;
  }
  connect(signer: Signer): BasicMetaTransaction__factory {
    return super.connect(signer) as BasicMetaTransaction__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicMetaTransaction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BasicMetaTransaction;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ea2806100206000396000f3fe60806040526004361061003f5760003560e01c80630c53c51c146100445780632d0335ab14610074578063564b81ef146100b15780636281133d146100dc575b600080fd5b61005e60048036038101906100599190610616565b610119565b60405161006b9190610aee565b60405180910390f35b34801561008057600080fd5b5061009b600480360381019061009691906105ed565b61035b565b6040516100a89190610b70565b60405180910390f35b3480156100bd57600080fd5b506100c66103a3565b6040516100d39190610b70565b60405180910390f35b3480156100e857600080fd5b5061010360048036038101906100fe91906106a5565b6103b0565b6040516101109190610a8e565b60405180910390f35b606061016f866000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101666103a3565b888888886103b0565b6101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a590610b50565b60405180910390fd5b61020060016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104eb90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000803073ffffffffffffffffffffffffffffffffffffffff16878960405160200161026f9291906109b8565b60405160208183030381529060405260405161028b91906109a1565b6000604051808303816000865af19150503d80600081146102c8576040519150601f19603f3d011682016040523d82523d6000602084013e6102cd565b606091505b509150915081610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030990610b10565b60405180910390fd5b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b88338960405161034593929190610a50565b60405180910390a1809250505095945050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000804690508091505090565b6000806103e8883089896040516020016103cd9493929190610a06565b60405160208183030381529060405280519060200120610501565b905060006001828588886040516000815260200160405260405161040f9493929190610aa9565b6020604051602081039080840390855afa158015610431573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610b30565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161492505050979650505050505050565b600081836104f99190610c2f565b905092915050565b60008160405160200161051491906109e0565b604051602081830303815290604052805190602001209050919050565b600061054461053f84610bbc565b610b8b565b90508281526020810184848401111561055c57600080fd5b610567848285610d1a565b509392505050565b60008135905061057e81610e10565b92915050565b60008135905061059381610e27565b92915050565b600082601f8301126105aa57600080fd5b81356105ba848260208601610531565b91505092915050565b6000813590506105d281610e3e565b92915050565b6000813590506105e781610e55565b92915050565b6000602082840312156105ff57600080fd5b600061060d8482850161056f565b91505092915050565b600080600080600060a0868803121561062e57600080fd5b600061063c8882890161056f565b955050602086013567ffffffffffffffff81111561065957600080fd5b61066588828901610599565b945050604061067688828901610584565b935050606061068788828901610584565b9250506080610698888289016105d8565b9150509295509295909350565b600080600080600080600060e0888a0312156106c057600080fd5b60006106ce8a828b0161056f565b97505060206106df8a828b016105c3565b96505060406106f08a828b016105c3565b955050606088013567ffffffffffffffff81111561070d57600080fd5b6107198a828b01610599565b945050608061072a8a828b01610584565b93505060a061073b8a828b01610584565b92505060c061074c8a828b016105d8565b91505092959891949750929550565b61076481610c97565b82525050565b61077381610c85565b82525050565b61078a61078582610c85565b610d5c565b82525050565b61079981610ca9565b82525050565b6107a881610cb5565b82525050565b6107bf6107ba82610cb5565b610d6e565b82525050565b60006107d082610bec565b6107da8185610bf7565b93506107ea818560208601610d29565b6107f381610df2565b840191505092915050565b600061080982610bec565b6108138185610c08565b9350610823818560208601610d29565b80840191505092915050565b61084061083b82610cf6565b610d5c565b82525050565b6000610853601c83610c24565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000610893601c83610c13565b91507f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006000830152602082019050919050565b60006108d3601183610c13565b91507f496e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b6000610913602183610c13565b91507f5369676e657220616e64207369676e617475726520646f206e6f74206d61746360008301527f68000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61097581610cdf565b82525050565b61098c61098782610cdf565b610d8a565b82525050565b61099b81610ce9565b82525050565b60006109ad82846107fe565b915081905092915050565b60006109c482856107fe565b91506109d08284610779565b6014820191508190509392505050565b60006109eb82610846565b91506109f782846107ae565b60208201915081905092915050565b6000610a12828761097b565b602082019150610a22828661082f565b601482019150610a32828561097b565b602082019150610a4282846107fe565b915081905095945050505050565b6000606082019050610a65600083018661076a565b610a72602083018561075b565b8181036040830152610a8481846107c5565b9050949350505050565b6000602082019050610aa36000830184610790565b92915050565b6000608082019050610abe600083018761079f565b610acb6020830186610992565b610ad8604083018561079f565b610ae5606083018461079f565b95945050505050565b60006020820190508181036000830152610b0881846107c5565b905092915050565b60006020820190508181036000830152610b2981610886565b9050919050565b60006020820190508181036000830152610b49816108c6565b9050919050565b60006020820190508181036000830152610b6981610906565b9050919050565b6000602082019050610b85600083018461096c565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610bb257610bb1610dc3565b5b8060405250919050565b600067ffffffffffffffff821115610bd757610bd6610dc3565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000610c3a82610cdf565b9150610c4583610cdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7a57610c79610d94565b5b828201905092915050565b6000610c9082610cbf565b9050919050565b6000610ca282610cbf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610d0182610d08565b9050919050565b6000610d1382610cbf565b9050919050565b82818337600083830152505050565b60005b83811015610d47578082015181840152602081019050610d2c565b83811115610d56576000848401525b50505050565b6000610d6782610d78565b9050919050565b6000819050919050565b6000610d8382610e03565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b610e1981610c85565b8114610e2457600080fd5b50565b610e3081610cb5565b8114610e3b57600080fd5b50565b610e4781610cdf565b8114610e5257600080fd5b50565b610e5e81610ce9565b8114610e6957600080fd5b5056fea264697066735822122033b7bd1a7117d11934af9f801d515a804d71a1a0964535949f21e2a4ef780b9c64736f6c63430008000033";
